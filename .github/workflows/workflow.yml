name: CI workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: python:3.9-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r config/requirements.txt

#      - name: Lint with flake8
#        run: |
#          flake8 src/app.py --count --select=E9,F63,F7,F82 --show-source --statistics
#          flake8 src/app.py --count --max-complexity=10 --max-line-length=127 --statistics

#      - name: Run unit tests with nose
#        run:
#          nosetests -v --with-spec --spec-color --with-coverage --cover-package=app
      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          sudo apt-get update
          sudo apt-get install -y --allow-downgrades \
            docker-ce \
            docker-ce-cli \
            containerd.io

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
#      - name: Build Docker Image
#        run: |
#          pip install docker
#          docker build -t my-flask-app ./config/.

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: your-dockerhub-username/your-repo-name:latest


